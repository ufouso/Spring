<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
            http://www.springframework.org/schema/mvc   
            http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context-3.0.xsd   
            http://www.springframework.org/schema/aop   
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
            http://www.springframework.org/schema/tx   
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
   
   
   <!-- 多数据源配置 -->
   <context:property-placeholder location="classpath:datasource/database.properties" />
   
   <import resource="datasource/datasource-context.xml" />
   
   <!-- MyBatis的数据库持久层配置/配置主-从数据源 -->
	<bean id="masterSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- <property name="configLocation" value="classpath:mybatis/mybatis-config-master.xml" /> -->
		<property name="mapperLocations" value="classpath:com/xpp/test/mapper/*.xml"></property>  
		<property name="dataSource" ref="masterDataSource" />
	</bean>

	<bean id="slaveSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- <property name="configLocation" value="classpath:mybatis/mybatis-config-slave.xml" /> -->
		<property name="mapperLocations" value="classpath:com/xpp/test/mapper1/*.xml"></property>
		<property name="dataSource" ref="slaveDataSource" />
	</bean>
   
   <!-- MyBatis为不同的mapper注入sqlSessionFactory, org.mybatis.spring.mapper.MapperScannerConfigurer -->
    <bean id="masterMapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.xpp.test.dao" />  
        <property name="sqlSessionFactoryBeanName" value="masterSqlSessionFactory"/>  
    </bean>
    <bean id="slaveMapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName"  value="slaveSqlSessionFactory" />
        <property name="basePackage" value="com.xpp.test.dao1" />
    </bean>
   
   <!-- atomikos事务管理器 -->
	<!-- <import resource="datasource/transaction-context.xml"></import> -->
<!-- atomikos事务管理器 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		 init-method="init" destroy-method="close">
        <property name="forceShutdown" value="true" />
    </bean>
 
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>
 	<!-- spring 事务管理器 -->  
    <bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />
        <!-- 必须设置，否则程序出现异常 JtaTransactionManager does not support custom isolation levels by default -->
        <property name="allowCustomIsolationLevels" value="true"/>
    </bean>
   	
   	<tx:annotation-driven transaction-manager="springTransactionManager"/>
   	
   	<!-- <tx:advice id="txAdvice" transaction-manager="txTransactionManager">
        <tx:attributes>
            <tx:method name="add*"  propagation="REQUIRED"  read-only="true" />
            <tx:method name="find*"  propagation="REQUIRED"  read-only="true" />
            <tx:method name="has*"  propagation="REQUIRED"  read-only="true" />
            <tx:method name="locate*"  propagation="REQUIRED"  read-only="true" />
            <tx:method name="register*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
        </tx:attributes>
    </tx:advice> -->
 	
    <!-- 开启aop注解扫描 -->
 	<!-- 启动对@Aspectj的支持 true为cglib，false为jdk代理，为true的话，会导致拦截不了mybatis的mapper -->
 	<aop:aspectj-autoproxy proxy-target-class="false" /> 
   
	<context:component-scan base-package="com.xpp.test.service" />
	<!-- <context:component-scan base-package="com.xpp.test.*" /> -->
</beans>